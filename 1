wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 1 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO  [alembic.runtime.migration] Running upgrade  -> 9d3ca3122d43, test
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [48]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'api/routers/sources.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [48]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [51]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [51]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [54]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [54]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [57]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [57]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [60]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
--- Logging error ---
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/logging/__init__.py", line 1100, in emit
    msg = self.format(record)
  File "/usr/local/lib/python3.10/logging/__init__.py", line 943, in format
    return fmt.format(record)
  File "/usr/local/lib/python3.10/logging/__init__.py", line 678, in format
    record.message = record.getMessage()
  File "/usr/local/lib/python3.10/logging/__init__.py", line 368, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "<string>", line 1, in <module>
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 129, in _main
    return self._bootstrap(parent_sentinel)
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 636, in run_until_complete
    self.run_forever()
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 603, in run_forever
    self._run_once()
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 1909, in _run_once
    handle._run()
  File "/usr/local/lib/python3.10/asyncio/events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/base.py", line 70, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/exceptions.py", line 68, in __call__
    await self.app(scope, receive, sender)
  File "/opt/valmi-activation/lib/python3.10/site-packages/fastapi/middleware/asyncexitstack.py", line 18, in __call__
    await self.app(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/routing.py", line 706, in __call__
    await route.handle(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/routing.py", line 276, in handle
    await self.app(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/routing.py", line 66, in app
    response = await func(request)
  File "/opt/valmi-activation/lib/python3.10/site-packages/fastapi/routing.py", line 238, in app
    raw_response = await run_endpoint_function(
  File "/opt/valmi-activation/lib/python3.10/site-packages/fastapi/routing.py", line 164, in run_endpoint_function
    return await dependant.call(**values)
  File "/workspace/src/./api/routers/sources.py", line 21, in get_source_spec
    logger.debug("Getting spec for source: ", connector_type)
Message: 'Getting spec for source: '
Arguments: ('SRC_POSTGRES',)
WARNING:  StatReload detected changes in 'api/routers/sources.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [60]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [85]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [85]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [110]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [110]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [113]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [113]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [136]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
/workspace/src/./app.py:26: RuntimeWarning: coroutine 'Request.body' was never awaited
  logging.info(f"Request body: {request.body()}")
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/workspace/src/./app.py:26: RuntimeWarning: coroutine 'Request.body' was never awaited
  logging.info(f"Request body: {request.body()}")
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [136]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [161]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [161]
Process SpawnProcess-11:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 17
    if v.get_bool("DEBUG"():
                           ^
SyntaxError: invalid syntax
WARNING:  StatReload detected changes in 'app.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-12:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 37, in create_app
    async def health() -> Json[Any]:
NameError: name 'Json' is not defined
WARNING:  StatReload detected changes in 'app.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-13:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 39, in create_app
    async def health() -> Json[Any]:
NameError: name 'Json' is not defined
WARNING:  StatReload detected changes in 'app.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-14:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 39, in create_app
    async def health() -> Json[Any]:
NameError: name 'Json' is not defined
WARNING:  StatReload detected changes in 'app.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-15:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 39, in create_app
    async def health() -> Json[Any]:
NameError: name 'Json' is not defined
WARNING:  StatReload detected changes in 'app.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-16:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 39, in create_app
    async def health() -> Json[Any]:
NameError: name 'Json' is not defined
WARNING:  StatReload detected changes in 'app.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [180]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
/workspace/src/./app.py:28: RuntimeWarning: coroutine 'Request.json' was never awaited
  logging.info(f"Request body: {request.json()}")
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/workspace/src/./app.py:28: RuntimeWarning: coroutine 'Request.json' was never awaited
  logging.info(f"Request body: {request.json()}")
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [180]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [205]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for connections to close. (CTRL+C to force quit)
INFO:     Waiting for background tasks to complete. (CTRL+C to force quit)
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/protocols/http/h11_impl.py", line 407, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py", line 78, in __call__
    return await self.app(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/fastapi/applications.py", line 274, in __call__
    await super().__call__(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/applications.py", line 118, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 184, in __call__
    raise exc
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
  File "/workspace/src/./app.py", line 28, in log_request
    logging.info(f"Request body: {await request.json()}")
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/requests.py", line 243, in json
    body = await self.body()
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/requests.py", line 236, in body
    async for chunk in self.stream():
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/requests.py", line 230, in stream
    raise ClientDisconnect()
starlette.requests.ClientDisconnect
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [205]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [230]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/protocols/http/h11_impl.py", line 407, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py", line 78, in __call__
    return await self.app(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/fastapi/applications.py", line 274, in __call__
    await super().__call__(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/applications.py", line 118, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 184, in __call__
    raise exc
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
  File "/workspace/src/./app.py", line 32, in log_request
    logging.info(f"Body {await body}")
TypeError: object bytes can't be used in 'await' expression
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [230]
Process SpawnProcess-20:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 30
    await for chunk in response.body_iterator:
          ^^^
SyntaxError: invalid syntax
WARNING:  StatReload detected changes in 'app.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [234]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/protocols/http/h11_impl.py", line 407, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py", line 78, in __call__
    return await self.app(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/fastapi/applications.py", line 274, in __call__
    await super().__call__(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/applications.py", line 118, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 184, in __call__
    raise exc
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
  File "/workspace/src/./app.py", line 30, in log_request
    for chunk in response.body_iterator:
TypeError: 'async_generator' object is not iterable
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [234]
Process SpawnProcess-22:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 30
    await for chunk in response.body_iterator:
          ^^^
SyntaxError: invalid syntax
WARNING:  StatReload detected changes in 'app.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [238]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [238]
Process SpawnProcess-24:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 30
    await async for chunk in response.body_iterator:
          ^^^^^
SyntaxError: invalid syntax
WARNING:  StatReload detected changes in 'app.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [242]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [242]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [245]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [245]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [248]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [248]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [251]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [251]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [254]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/protocols/http/h11_impl.py", line 407, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py", line 78, in __call__
    return await self.app(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/fastapi/applications.py", line 274, in __call__
    await super().__call__(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/applications.py", line 118, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 184, in __call__
    raise exc
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
  File "/workspace/src/./app.py", line 32, in log_request
    logging.info(f"Body { await response.body()}")
AttributeError: '_StreamingResponse' object has no attribute 'body'
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/protocols/http/h11_impl.py", line 407, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py", line 78, in __call__
    return await self.app(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/fastapi/applications.py", line 274, in __call__
    await super().__call__(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/applications.py", line 118, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 184, in __call__
    raise exc
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
  File "/workspace/src/./app.py", line 32, in log_request
    logging.info(f"Body { await response.body()}")
AttributeError: '_StreamingResponse' object has no attribute 'body'
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [254]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [257]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/protocols/http/h11_impl.py", line 407, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py", line 78, in __call__
    return await self.app(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/fastapi/applications.py", line 274, in __call__
    await super().__call__(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/applications.py", line 118, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 184, in __call__
    raise exc
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
  File "/workspace/src/./app.py", line 32, in log_request
    logging.info(f"Body { await body}")
TypeError: object bytes can't be used in 'await' expression
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [257]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [260]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/protocols/http/h11_impl.py", line 407, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py", line 78, in __call__
    return await self.app(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/fastapi/applications.py", line 274, in __call__
    await super().__call__(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/applications.py", line 118, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 184, in __call__
    raise exc
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
  File "/workspace/src/./app.py", line 28, in log_request
    logging.info(f"Request body: {await request.json()}")
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/requests.py", line 243, in json
    body = await self.body()
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/requests.py", line 236, in body
    async for chunk in self.stream():
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/requests.py", line 230, in stream
    raise ClientDisconnect()
starlette.requests.ClientDisconnect
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/protocols/http/h11_impl.py", line 407, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py", line 78, in __call__
    return await self.app(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/fastapi/applications.py", line 274, in __call__
    await super().__call__(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/applications.py", line 118, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 184, in __call__
    raise exc
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
  File "/workspace/src/./app.py", line 28, in log_request
    logging.info(f"Request body: {await request.json()}")
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/requests.py", line 243, in json
    body = await self.body()
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/requests.py", line 236, in body
    async for chunk in self.stream():
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/requests.py", line 230, in stream
    raise ClientDisconnect()
starlette.requests.ClientDisconnect
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/protocols/http/h11_impl.py", line 407, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py", line 78, in __call__
    return await self.app(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/fastapi/applications.py", line 274, in __call__
    await super().__call__(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/applications.py", line 118, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 184, in __call__
    raise exc
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
  File "/workspace/src/./app.py", line 28, in log_request
    logging.info(f"Request body: {await request.json()}")
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/requests.py", line 243, in json
    body = await self.body()
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/requests.py", line 236, in body
    async for chunk in self.stream():
  File "/opt/valmi-activation/lib/python3.10/site-packages/starlette/requests.py", line 230, in stream
    raise ClientDisconnect()
starlette.requests.ClientDisconnect
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [260]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [329]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [329]
Process SpawnProcess-33:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 28
    logging.info(f"Request body: {} request.json()}")
                                                    ^
SyntaxError: f-string: empty expression not allowed
WARNING:  StatReload detected changes in 'app.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [356]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
/workspace/src/./app.py:28: RuntimeWarning: coroutine 'Request.json' was never awaited
  logging.info(f"Request body: { request.json()}")
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/workspace/src/./app.py:28: RuntimeWarning: coroutine 'Request.json' was never awaited
  logging.info(f"Request body: { request.json()}")
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [356]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [381]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
/workspace/src/./app.py:26: RuntimeWarning: coroutine 'Request.json' was never awaited
  logging.info(f"Request body: { request.json()}")
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [381]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [406]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [406]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [409]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [409]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [412]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [412]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [415]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [415]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [418]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [418]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [421]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [421]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [424]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [424]
Process SpawnProcess-43:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 24
    def __init__(self, app:ASGIApp) -> None:
    ^^^
IndentationError: expected an indented block after class definition on line 23
WARNING:  StatReload detected changes in 'app.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-44:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 23, in create_app
    class LogRequestsMiddleware:
  File "/workspace/src/./app.py", line 24, in LogRequestsMiddleware
    def __init__(self, app: ASGIApp) -> None:
NameError: name 'ASGIApp' is not defined
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-45:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 39
    @app.middleware("http")
IndentationError: unexpected indent
WARNING:  StatReload detected changes in 'app.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-46:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 23, in create_app
    class LogRequestsMiddleware:
  File "/workspace/src/./app.py", line 24, in LogRequestsMiddleware
    def __init__(self, app: ASGIApp) -> None:
NameError: name 'ASGIApp' is not defined
WARNING:  StatReload detected changes in 'app.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [435]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [435]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [46]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [46]
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [49]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [49]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [46]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [46]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [46]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
INFO:     Shutting down
INFO:     Finished server process [46]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [46]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'metastore/models.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [46]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [46]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'metastore/models.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [46]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-1:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, sources, stores
ImportError: cannot import name 'sources' from 'api.routers' (/workspace/src/./api/routers/__init__.py)
WARNING:  StatReload detected changes in 'metastore/models.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-2:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, sources, stores
ImportError: cannot import name 'sources' from 'api.routers' (/workspace/src/./api/routers/__init__.py)
WARNING:  StatReload detected changes in 'api/routers/products.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-3:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, sources, stores
ImportError: cannot import name 'sources' from 'api.routers' (/workspace/src/./api/routers/__init__.py)
WARNING:  StatReload detected changes in 'api/routers/products.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-4:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, sources, stores
ImportError: cannot import name 'sources' from 'api.routers' (/workspace/src/./api/routers/__init__.py)
WARNING:  StatReload detected changes in 'app.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-5:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 10, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'app.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-6:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 10, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'api/routers/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-7:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 10, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'api/services/__init__.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-8:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 10, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'api/services/__init__.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-9:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 10, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'api/services/__init__.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-10:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 10, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'api/services/__init__.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-11:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 10, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'api/services/__init__.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-12:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 10, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'api/services/__init__.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-13:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 10, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'api/services/__init__.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
WARNING:  StatReload detected changes in 'api/services/__init__.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-15:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 10, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'api/services/__init__.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-16:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 10, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'api/routers/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-17:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 10, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'api/routers/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-18:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 10, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'api/routers/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-19:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 12, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'api/routers/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-20:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 12, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'api/routers/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-21:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 12, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-22:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 8, in <module>
    class SyncsService(BaseService[Sync, StoreCreate, StoreUpdate]):
NameError: name 'Sync' is not defined
WARNING:  StatReload detected changes in 'metastore/models.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-23:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 8, in <module>
    class SyncsService(BaseService[Sync, StoreCreate, StoreUpdate]):
NameError: name 'Sync' is not defined
WARNING:  StatReload detected changes in 'metastore/models.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-24:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 8, in <module>
    class SyncsService(BaseService[Sync, StoreCreate, StoreUpdate]):
NameError: name 'Sync' is not defined
WARNING:  StatReload detected changes in 'api/routers/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-25:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 8, in <module>
    class SyncsService(BaseService[Sync, StoreCreate, StoreUpdate]):
NameError: name 'Sync' is not defined
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-26:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 8, in <module>
    class SyncsService(BaseService[Sync, StoreCreate, StoreUpdate]):
NameError: name 'Sync' is not defined
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-27:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 8, in <module>
    class SyncsService(BaseService[SyncSC, StoreCreate, StoreUpdate]):
NameError: name 'SyncSC' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-28:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 8, in <module>
    class SyncsService(BaseService[SyncSC, StoreCreate, StoreUpdate]):
NameError: name 'SyncSC' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-29:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 8, in <module>
    class SyncsService(BaseService[SyncSC, StoreCreate, StoreUpdate]):
NameError: name 'SyncSC' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-30:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 8, in <module>
    class SyncsService(BaseService[SyncSC, StoreCreate, StoreUpdate]):
NameError: name 'SyncSC' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-31:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 8, in <module>
    class SyncsService(BaseService[SyncSC, StoreCreate, StoreUpdate]):
NameError: name 'SyncSC' is not defined
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-32:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/syncs.py", line 12, in <module>
    from api.schemas import SyncRun
ImportError: cannot import name 'SyncRun' from 'api.schemas' (/workspace/src/./api/schemas/__init__.py)
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-33:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 9, in <module>
    class SyncsService(BaseService[SyncRun, SyncRunCreate, StoreUpdate]):
NameError: name 'SyncRunCreate' is not defined
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-34:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 8, in <module>
    class SyncsService(BaseService[SyncRun, SyncRunCreate, SyncRunUpdate]):
NameError: name 'SyncRunCreate' is not defined
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-35:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-36:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-37:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-38:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-39:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-40:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-41:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-42:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-43:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-44:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-45:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-46:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-47:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-48:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-49:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-50:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-51:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-52:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-53:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-54:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-55:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-56:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-57:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-58:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-59:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-60:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-61:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, SyncScheduleUpdate]):
NameError: name 'SyncSchedule' is not defined
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-62:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, Any]):
NameError: name 'SyncScheduleCreate' is not defined
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-63:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 9, in <module>
    from .syncs import SyncsService
  File "/workspace/src/./api/services/syncs.py", line 7, in <module>
    class SyncsService(BaseService[SyncSchedule, SyncScheduleCreate, Any]):
NameError: name 'SyncScheduleCreate' is not defined
WARNING:  StatReload detected changes in 'api/schemas/__init__.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-64:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-65:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-66:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-67:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/services/__init__.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-68:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-69:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-70:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-71:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-72:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/services/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-73:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/routers/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-74:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/routers/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-75:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/routers/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-76:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/routers/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-77:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/routers/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-78:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/routers/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-79:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/routers/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-80:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/routers/syncs.py'. Reloading...
/workspace/src/./orchestrator/repo.py:273: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-81:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
/workspace/src/./orchestrator/repo.py:131: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-82:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
/workspace/src/./orchestrator/repo.py:130: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-83:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
/workspace/src/./orchestrator/repo.py:125: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-84:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
Process SpawnProcess-85:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 7, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 61
    self.gen_dagster_job_archive(dirs, resp.json()))
                                                   ^
SyntaxError: unmatched ')'
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
/workspace/src/./orchestrator/repo.py:125: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-86:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
/workspace/src/./orchestrator/repo.py:125: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-87:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
/workspace/src/./orchestrator/repo.py:126: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-88:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
/workspace/src/./orchestrator/repo.py:129: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-89:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
/workspace/src/./orchestrator/repo.py:129: ExperimentalWarning: "DagsterGraphQLClient" is an experimental class. It may break in future versions, even between dot releases. To mute warnings for experimental functionality, invoke warnings.filterwarnings("ignore", category=dagster.ExperimentalWarning) or use one of the other methods described at https://docs.python.org/3/library/warnings.html#describing-warning-filters.
  self.client = DagsterGraphQLClient(v.get("DAGIT_HOST"), port_number=v.get_int("DAGIT_PORT"))
Process SpawnProcess-90:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
Process SpawnProcess-91:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 7, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
Process SpawnProcess-92:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 7, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
Process SpawnProcess-93:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 7, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
INFO:     Stopping reloader process [1]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
Process SpawnProcess-1:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 7, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
INFO:     Stopping reloader process [1]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
Process SpawnProcess-1:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 7, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
Process SpawnProcess-1:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 7, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
INFO:     Stopping reloader process [1]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
Process SpawnProcess-1:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 7, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-2:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 63, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-3:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 17, in create_app
    repo = Repo()
NameError: name 'Repo' is not defined
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-4:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 7, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-5:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 7, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-6:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 7, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-7:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 63, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-8:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 60
    @app.get("/health")
IndentationError: unexpected indent
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-9:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 51, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-10:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 51, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-11:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 9, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-12:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 9, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-13:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 9, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-14:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 9, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
INFO:     Stopping reloader process [1]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
Process SpawnProcess-1:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 9, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-2:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 48, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-3:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 47, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'main.py'. Reloading...
Process SpawnProcess-4:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 38, in app
    return create_app()
  File "/workspace/src/./app.py", line 47, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'main.py'. Reloading...
Process SpawnProcess-5:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 37, in app
    return create_app()
  File "/workspace/src/./app.py", line 47, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'main.py'. Reloading...
Process SpawnProcess-6:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 37, in app
    return create_app()
  File "/workspace/src/./app.py", line 47, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'main.py'. Reloading...
Process SpawnProcess-7:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 13, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'main.py'. Reloading...
Process SpawnProcess-8:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 13, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'main.py'. Reloading...
Process SpawnProcess-9:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 12, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'main.py'. Reloading...
Process SpawnProcess-10:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 12, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'main.py'. Reloading...
Process SpawnProcess-11:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 12, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'api/schemas/__init__.py'. Reloading...
Process SpawnProcess-12:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 12, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'api/schemas/__init__.py'. Reloading...
Process SpawnProcess-13:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 12, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'api/routers/connectors.py'. Reloading...
Process SpawnProcess-14:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 12, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'api/routers/connectors.py'. Reloading...
Process SpawnProcess-15:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 12, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'api/routers/connectors.py'. Reloading...
Process SpawnProcess-16:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 12, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'main.py'. Reloading...
Process SpawnProcess-17:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 12, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'main.py'. Reloading...
Process SpawnProcess-18:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 47, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-19:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 9, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-20:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 51, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-21:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 51, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-22:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 7, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-23:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 7, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-24:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 7, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-25:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    @asynccontextmanager
NameError: name 'asynccontextmanager' is not defined
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-26:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 24, in import_from_string
    raise exc from None
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 10, in <module>
    from metastore.repo import Repo
ModuleNotFoundError: No module named 'metastore.repo'
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-27:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 24, in import_from_string
    raise exc from None
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 10, in <module>
    from metastore.repo import Repo
ModuleNotFoundError: No module named 'metastore.repo'
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-28:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 24, in import_from_string
    raise exc from None
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from metastore.repo import Repo
ModuleNotFoundError: No module named 'metastore.repo'
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-29:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 24, in import_from_string
    raise exc from None
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from metastore.repo import Repo
ModuleNotFoundError: No module named 'metastore.repo'
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-30:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 24, in import_from_string
    raise exc from None
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from metastore.repo import Repo
ModuleNotFoundError: No module named 'metastore.repo'
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-31:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 24, in import_from_string
    raise exc from None
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from metastore.repo import Repo
ModuleNotFoundError: No module named 'metastore.repo'
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-32:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 24, in import_from_string
    raise exc from None
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from metastore.repo import Repo
ModuleNotFoundError: No module named 'metastore.repo'
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-33:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'metastore/session.py'. Reloading...
Process SpawnProcess-34:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 3
    print(v.get_string("DATABASE_URL")
         ^
SyntaxError: '(' was never closed
WARNING:  StatReload detected changes in 'metastore/session.py'. Reloading...
Process SpawnProcess-35:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 3
    print(v.get_string("DATABASE_URL")
         ^
SyntaxError: '(' was never closed
WARNING:  StatReload detected changes in 'metastore/session.py'. Reloading...
Process SpawnProcess-36:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 10, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'metastore/session.py'. Reloading...
Process SpawnProcess-37:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 10, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
INFO:     Stopping reloader process [1]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
Process SpawnProcess-1:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 10, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'metastore/session.py'. Reloading...
Process SpawnProcess-2:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 10, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'metastore/session.py'. Reloading...
Process SpawnProcess-3:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
INFO:     Stopping reloader process [1]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
Process SpawnProcess-1:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 9, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'metastore/session.py'. Reloading...
Process SpawnProcess-2:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 10, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-3:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 10, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'metastore/session.py'. Reloading...
Process SpawnProcess-4:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 10, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'utils/utils.py'. Reloading...
Process SpawnProcess-5:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 10, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
INFO:     Stopping reloader process [1]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
Process SpawnProcess-1:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 10, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
INFO:     Stopping reloader process [1]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
Process SpawnProcess-1:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 477, in load
    self.loaded_app = import_from_string(self.app)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/importer.py", line 21, in import_from_string
    module = importlib.import_module(module_str)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/workspace/src/./main.py", line 8, in <module>
    from app import create_app
  File "/workspace/src/./app.py", line 11, in <module>
    from orchestrator.repo import Repo
  File "/workspace/src/./orchestrator/repo.py", line 17, in <module>
    from api.services import SyncsService, get_syncs_service
  File "/workspace/src/./api/services/__init__.py", line 4, in <module>
    from metastore.session import get_session
  File "/workspace/src/./metastore/session.py", line 10, in <module>
    engine = create_engine(v.get_string("DATABASE_URL"), pool_pre_ping=True)
  File "<string>", line 2, in create_engine
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py", line 375, in warned
    return fn(*args, **kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 518, in create_engine
    u = _url.make_url(url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 738, in make_url
    return _parse_url(name_or_url)
  File "/opt/valmi-activation/lib/python3.10/site-packages/sqlalchemy/engine/url.py", line 799, in _parse_url
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse SQLAlchemy URL from string ''
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-2:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 64, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-3:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 64, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'app.py'. Reloading...
Process SpawnProcess-4:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
INFO:     Stopping reloader process [1]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
Process SpawnProcess-1:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 13, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
Process SpawnProcess-2:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 10
    class SyncScheduleCreate(SyncScheduleBase):
    ^^^^^
IndentationError: expected an indented block after class definition on line 7
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
Process SpawnProcess-3:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 11, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
INFO:     Stopping reloader process [1]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
Process SpawnProcess-1:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 11, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 542, in prepare
    self.populate_validators()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 804, in populate_validators
    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/validators.py", line 723, in find_validators
    raise RuntimeError(f'no validator found for {type_}, see `arbitrary_types_allowed` in Config')
RuntimeError: no validator found for <class 'typing._UnionGenericAlias'>, see `arbitrary_types_allowed` in Config
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
Process SpawnProcess-2:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/_subprocess.py", line 76, in subprocess_started
    target(sockets=sockets)
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 60, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/server.py", line 67, in serve
    config.load()
  File "/opt/valmi-activation/lib/python3.10/site-packages/uvicorn/config.py", line 483, in load
    self.loaded_app = self.loaded_app()
  File "/workspace/src/./main.py", line 23, in app
    return create_app()
  File "/workspace/src/./app.py", line 66, in create_app
    from api.routers import orders, products, stores, syncs
  File "/workspace/src/./api/routers/orders.py", line 7, in <module>
    from api.services import OrdersService, get_orders_service
  File "/workspace/src/./api/services/__init__.py", line 6, in <module>
    from .orders import OrdersService
  File "/workspace/src/./api/services/orders.py", line 6, in <module>
    from api.schemas import OrderCreate
  File "/workspace/src/./api/schemas/__init__.py", line 5, in <module>
    from .syncs import *
  File "/workspace/src/./api/schemas/syncs.py", line 10, in <module>
    class SyncScheduleCreate(SyncScheduleBase):
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/main.py", line 229, in __new__
    inferred = ModelField.infer(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 491, in infer
    return cls(
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 421, in __init__
    self.prepare()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 531, in prepare
    self._set_default_and_type()
  File "/opt/valmi-activation/lib/python3.10/site-packages/pydantic/fields.py", line 562, in _set_default_and_type
    raise errors_.ConfigError(f'unable to infer type for attribute "{self.name}"')
pydantic.errors.ConfigError: unable to infer type for attribute "last_run_at"
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [48]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'api/schemas/syncs.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [48]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [49]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [49]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [50]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [50]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [51]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'metastore/session.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [51]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [52]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'api/routers/syncs.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [52]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [53]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [53]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [54]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [54]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [55]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [55]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [56]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [56]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [57]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [57]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [58]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [58]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [59]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [59]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [60]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [60]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [61]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [61]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [62]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
INFO:     Shutting down
INFO:     Finished server process [62]
INFO:     Stopping reloader process [1]
wait-for-it.sh: waiting 60 seconds for valmi-db:5432
wait-for-it.sh: valmi-db:5432 is available after 0 seconds
INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO:     Will watch for changes in these directories: ['/workspace/src']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1] using StatReload
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [46]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'orchestrator/repo.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [46]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [47]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [47]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [48]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
WARNING:  StatReload detected changes in 'app.py'. Reloading...
INFO:     Shutting down
INFO:     Finished server process [48]
WARNING:  ASGI app factory detected. Using it, but please consider setting the --factory flag explicitly.
INFO:     Started server process [49]
INFO:     Waiting for application startup.
INFO:     ASGI 'lifespan' protocol appears unsupported.
INFO:     Application startup complete.
